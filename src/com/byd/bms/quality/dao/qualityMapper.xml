<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.byd.bms.quality.dao.IQualityDao">
	<insert id="insertFaultLib" parameterType="Map" useGeneratedKeys="true">
		<selectKey resultType="int" keyProperty="id" order="AFTER">
			SELECT
			LAST_INSERT_ID()
		</selectKey>
		insert into BMS_NA_DEFECT_CODE 
		(defect_type,serious_level,defect_code,defect_name,editor_id,edit_date) 
		values(#{defectType},#{faultLevel},#{defectCode},#{defectName},#{editorId},#{editDate})
	</insert>
	<update id="updateFaultLib" parameterType="Map">
		update BMS_NA_DEFECT_CODE
		<set>
			defect_type=#{defectType},serious_level=#{faultLevel},defect_code=#{defectCode},defect_name=#{defectName},
			editor_id=#{editorId},edit_date=#{editDate}
		</set>
		where id=#{id}
	</update>
     <select id="getFaultLibList" parameterType="Map" resultType="Map">
     	select f.id,f.defect_type,f.serious_level,f.defect_code,f.defect_name,f.editor_id,u.username,f.edit_date
		from BMS_NA_DEFECT_CODE  f 
		left join BMS_NA_BASE_USER u on f.editor_id=u.id
		where 1=1
		<if test="defect_type !=null and  defect_type !='All'">
			and f.defect_type like CONCAT('%',#{defect_type},'%')
		</if>
		<if test="defect_name!=null and  defect_name!=''">
			and f.defect_name like CONCAT('%',#{defect_name},'%')
		</if>
		<if test="faultLevel!=null  and faultLevel.length!=0">
			and f.serious_level in
			<foreach collection="faultLevel" index="index" item="item"
				open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
		order by RIGHT(f.defect_type,1),cast(RIGHT(f.defect_code,3) as signed)
		<if test="start !=null">
			LIMIT ${start} ,${length} 
		</if>
     </select>
     <select id="getFaultLibCount" parameterType="Map" resultType="int">
		select count(f.id)
		from BMS_NA_DEFECT_CODE f 
		where 1=1
		<if test="defect_type !=null and  defect_type !='All'">
			and f.defect_type like CONCAT('%',#{defect_type},'%')
		</if>
		<if test="defect_name!=null and  defect_name!=''">
			and f.defect_name like CONCAT('%',#{defect_name},'%')
		</if>
		<if test="faultLevel!=null  and faultLevel.length!=0">
			and f.serious_level in
			<foreach collection="faultLevel" index="index" item="item"
				open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
	</select>
	
	<select id="getOrderKeyPartsTemplateList" parameterType="Map" resultType="Map">
		select distinct(t.version) version,p.id,p.project_no,
		CONCAT(p.project_no,' ',p.project_name,p.bus_type,'  ',p.quantity,' ',' Bus') AS order_desc,
		p.bus_type,u.username editor,t.edit_date
		from BMS_NA_PROJECT_TRACE_TEMPLATE t
		left join BMS_NA_PROJECT p on p.id=t.project_id
		left join BMS_NA_BASE_USER u on u.id=t.editor_id
		where 1=1
		<if test="project_no !=null and project_no !=''">
			and p.project_no=#{project_no}
		</if>
		<if test="bus_type !=null and bus_type !='All'">
			and p.bus_type=#{bus_type}
		</if>
			order by p.project_no,version desc
		<if test="start !=null">
			limit #{start},#{length}
		</if>
	</select>
	
	<select id="getOrderKeyPartsTemplateCount" parameterType="Map" resultType="int">
		select COUNT(distinct(CONCAT(t.version,'-', p.id)))  from BMS_NA_PROJECT_TRACE_TEMPLATE t
		left join BMS_NA_PROJECT p on p.id=t.project_id
		where 1=1
		<if test="project_no !=null and project_no !=''">
			and p.project_no=#{project_no}
		</if>
		<if test="bus_type !=null and bus_type !='All'">
			and p.bus_type=#{bus_type}
		</if>
	</select>
	
	<select id="queryKeyPartsMaxVersion" parameterType="String" resultType="String">
		select max(version) from BMS_NA_PROJECT_TRACE_TEMPLATE where project_id=#{project_id} 
	</select>
	
	<update id='updateKeyPartsHeader' parameterType="Map">
		update BMS_QM_KEY_PARTS_TEMPLATE_HEADER set editor_id=#{editor_id} ,edit_date=#{edit_date}
		where bus_type_id=#{bus_type_id} and order_id=#{order_id} and order_config_id=#{order_config_id}
	</update>
	
	<insert id="saveKeyPartsDetails" parameterType="List" useGeneratedKeys="true" keyProperty="id" >
		<selectKey resultType="int" keyProperty="id" order="AFTER">
			SELECT
			LAST_INSERT_ID()
		</selectKey>
		insert into BMS_NA_PROJECT_TRACE_TEMPLATE 
		(project_id,version,item_no,SAP_material,parts_name,BYD_NO,vendor,workshop,station,editor_id,edit_date)
		values
		<foreach collection="list" item="detail" index="index" separator=",">
			(#{detail.project_id},#{detail.version},#{detail.item_no},#{detail.SAP_material},#{detail.parts_name},#{detail.BYD_NO},
			#{detail.vendor},#{detail.workshop},#{detail.station},#{detail.editor_id},#{detail.edit_date})
		</foreach>		
	</insert>
	
	<delete id="deleteKeyPartsDetails" parameterType="Map">
		delete from BMS_NA_PROJECT_TRACE_TEMPLATE where project_id=#{project_id} and version=#{version}
	</delete>
	
	<select id="queryKeyPartsList" parameterType="Map" resultType="Map">
		select d.sap_mat,d.parts_no,d.parts_name,d.size,d.vendor,d.workshop,d.process,d.3C_components ccc,d.3C_no cccNo
		from BMS_QM_KEY_PARTS_TEMPLATE_DETAILS d
		left join BMS_QM_KEY_PARTS_TEMPLATE_HEADER h on d.key_components_template_id=h.id
		where h.bus_type_id=#{bus_type_id} and h.order_id=#{order_id} and h.order_config_id=#{order_config_id}
	</select>
	
	<select id="queryWorkshopProcessList" resultType="Map">
     	select workshop,process_name process from BMS_BASE_PROCESS
     	where
     	<foreach collection='addList' item='detail' index="index" separator="or" >
     		(workshop=#{detail.workshop} and process_name=#{detail.process})
     	</foreach>
     </select>
     <select id="getKeyPartsList" parameterType="Map" resultType="Map">
		select d.item_no,d.SAP_material,d.parts_name,d.BYD_NO,d.vendor,d.workshop,d.station
		from BMS_NA_PROJECT_TRACE_TEMPLATE d
		where d.project_id=#{project_id} and d.version=#{version}
	</select>
	<select id="getPrdRcdOrderTplList" parameterType="Map" resultType="Map">
		select distinct(t.version) version,p.id,p.project_no,
		CONCAT(p.project_no,' ',p.project_name,p.bus_type,'  ',p.quantity,' ',' Bus') AS order_desc,
		p.bus_type,u.username editor,t.edit_date
		from BMS_NA_PROJECT_INSPECTION_RECORD_TEMPLATE t
		left join BMS_NA_PROJECT p on p.id=t.project_id
		left join BMS_NA_BASE_USER u on u.id=t.editor_id
		where 1=1
		<if test="project_no !=null and project_no !=''">
			and p.project_no=#{project_no}
		</if>
		<if test="bus_type !=null and bus_type !='All'">
			and p.bus_type=#{bus_type}
		</if>
			order by p.project_no desc,version desc
		<if test="start !=null">
			limit #{start},#{length}
		</if>
	</select>
	
	<select id="getPrdRcdOrderTplCount" parameterType="Map" resultType="int">
		select count(distinct project_id,version) as count from BMS_NA_PROJECT_INSPECTION_RECORD_TEMPLATE t
		left join BMS_NA_PROJECT p on p.id=t.project_id
		left join BMS_NA_BASE_USER u on u.id=t.editor_id
		where 1=1
		<if test="project_no !=null and project_no !=''">
			and p.project_no=#{project_no}
		</if>
		<if test="bus_type !=null and bus_type !='All'">
			and p.bus_type=#{bus_type}
		</if>
	</select>
	<select id="getProjectByNo" parameterType="Map" resultType="Map">
		select * from BMS_NA_PROJECT p where 1=1 and p.project_no=#{project_no}
	</select>
	<insert id="saveInspectionRecordTemplate" parameterType="List" useGeneratedKeys="true" keyProperty="id" >
		<selectKey resultType="int" keyProperty="id" order="AFTER">
			SELECT
			LAST_INSERT_ID()
		</selectKey>
		insert into BMS_NA_PROJECT_INSPECTION_RECORD_TEMPLATE 
		(project_id,version,station,process_name,inspection_item,specification_and_standard,editor_id,edit_date)
		values
		<foreach collection="list" item="detail" index="index" separator=",">
			(#{detail.project_id},#{detail.version},#{detail.station},#{detail.process_name},
			#{detail.inspection_item},#{detail.specification_and_standard},#{detail.editor_id},#{detail.edit_date})
		</foreach>		
	</insert>
	<select id="queryInspectionRecordMaxVersion" parameterType="String" resultType="String">
		select max(version) from BMS_NA_PROJECT_INSPECTION_RECORD_TEMPLATE where project_id=#{project_id} 
	</select>
	<delete id="deleteInspectionRecordTemplate" parameterType="Map">
		delete from BMS_NA_PROJECT_INSPECTION_RECORD_TEMPLATE where project_id=#{project_id} and version=#{version}
	</delete>
	<select id="getPrdRcdOrderTplDetailList" parameterType="Map" resultType="Map">
		select d.* from BMS_NA_PROJECT_INSPECTION_RECORD_TEMPLATE d
		where d.project_id=#{project_id}
		<if test="process_name !=null and process_name !=''">
		   and d.process_name=#{process_name}
		</if>
		<if test="version !=null and version !=''">
		   and d.version=#{version}
		</if>
		<if test="version ==null">
		   and d.version=(select max(version) from BMS_NA_PROJECT_INSPECTION_RECORD_TEMPLATE
		   where project_id=#{project_id})
		</if>
	</select>
	<select id="getInspectionDetailList" parameterType="Map" resultType="Map">
		select d.*,r.self_inspection,r.self_sign,r.self_sign_date,r.qc_inspection,
		r.qc_sign,r.qc_sign_date from BMS_NA_PROJECT_INSPECTION_RECORD_TEMPLATE d
		left join BMS_NA_BUS_INSPECTION_RECORD r on r.template_id=d.id 
		and r.inspection_item=d.inspection_item and r.bus_number=#{bus_number}
		where d.project_id=#{project_id}
		<if test="version !=null and version !=''">
		   and d.version=#{version}
		</if>
		<if test="version ==null">
		   and d.version=(select max(version) from BMS_NA_PROJECT_INSPECTION_RECORD_TEMPLATE
		   where project_id=#{project_id})
		</if>
	</select>
	<select id="getInspectionByBusNo" parameterType="Map" resultType="Map">
		select * from BMS_NA_BUS_INSPECTION_RECORD r where bus_number=#{bus_number}
	</select>
	<select id="getPrdRcdTestingTplList" parameterType="Map" resultType="Map">
		select p.id,p.project_no,h.project_id,h.id header_id,h.test_type_value,h.initiated,h.approved,h.remarks,h.editor_id,h.edit_date,
		CONCAT(p.project_no,' ',p.project_name,p.bus_type,'  ',p.quantity,' ',' Bus') AS order_desc,
		p.bus_type,u.username editor,h.edit_date
		from BMS_NA_PROJECT_TESTING_TEMPLATE_HEAD h
		left join BMS_NA_PROJECT p on p.id=h.project_id
<!-- 		left join BMS_NA_BASE_KEY k on k.value=h.test_type_value -->
		left join BMS_NA_BASE_USER u on u.id=h.editor_id
		where 1=1
		<if test="project_no !=null and project_no !=''">
			and p.project_no=#{project_no}
		</if>
		<if test="bus_type !=null and bus_type !='All'">
			and p.bus_type=#{bus_type}
		</if>
		<if test="test_type_value !=null and test_type_value !=''">
			and h.test_type_value=#{test_type_value}
		</if>
		<if test="project_id !=null and project_id !=''">
			and h.project_id=#{project_id}
		</if>
			order by p.project_no desc
		<if test="start !=null and length!=-1">
			limit #{start},#{length}
		</if>
	</select>
	
	<select id="getPrdRcdTestingTplCount" parameterType="Map" resultType="int">
		select count(1) from BMS_NA_PROJECT_TESTING_TEMPLATE_HEAD h
		left join BMS_NA_PROJECT p on p.id=h.project_id
		where 1=1
		<if test="project_no !=null and project_no !=''">
			and p.project_no=#{project_no}
		</if>
		<if test="bus_type !=null and bus_type !='All'">
			and p.bus_type=#{bus_type}
		</if>
		<if test="test_type_value !=null and test_type_value !=''">
			and h.test_type_value=#{test_type_value}
		</if>
		<if test="project_id !=null and project_id !=''">
			and h.project_id=#{project_id}
		</if>
	</select>
	<insert id="saveTestingTemplateHead" parameterType="Map" useGeneratedKeys="true" keyProperty="id" >
		<selectKey resultType="int" keyProperty="id" order="AFTER">
			SELECT
			LAST_INSERT_ID()
		</selectKey>
		insert into BMS_NA_PROJECT_TESTING_TEMPLATE_HEAD 
		(project_id,test_type_value,initiated,approved,remarks,editor_id,edit_date)
		values (#{project_id},#{test_type_value},#{initiated},#{approved}
		,#{remarks},#{editor_id},#{edit_date})
	</insert>
	<insert id="saveTestingTemplateItem" parameterType="Map" useGeneratedKeys="true" keyProperty="id" >
		<selectKey resultType="int" keyProperty="id" order="AFTER">
			SELECT
			LAST_INSERT_ID()
		</selectKey>
		insert into BMS_NA_PROJECT_TESTING_TEMPLATE_DETAIL 
		(testing_template_head_id,item_no,inspection_item,specification_standard)
		values
		<foreach collection="list" item="detail" index="index" separator=",">
			(#{testing_template_head_id},#{detail.item_no},#{detail.inspection_item},#{detail.specification_standard})
		</foreach>		
	</insert>
	<delete id="deleteTestingTemplateByHeader" parameterType="int">
		delete from BMS_NA_PROJECT_TESTING_TEMPLATE_DETAIL where testing_template_head_id=#{testing_template_head_id}
	</delete>
	<update id='updateTestingTemplateHeader' parameterType="Map">
		update BMS_NA_PROJECT_TESTING_TEMPLATE_HEAD set editor_id=#{editor_id},edit_date=#{edit_date},
		initiated=#{initiated},approved=#{approved},remarks=#{remarks}
		where project_id=#{project_id} and test_type_value=#{test_type_value}
	</update>
	
	<select id="queryTestingTemplateHeader" parameterType="Map" resultType="Map">
		select * from BMS_NA_PROJECT_TESTING_TEMPLATE_HEAD h where 1=1
		<if test="project_id !=null and project_id !=''">
			and h.project_id=#{project_id}
		</if>
		<if test="testing_type !=null and testing_type !=''">
			and h.testing_type_value=#{testing_type}
		</if>
	</select>
	<select id="getTestingTemplateDetailByHeader" parameterType="Map" resultType="Map">
		select d.* from BMS_NA_PROJECT_TESTING_TEMPLATE_DETAIL d 
		left join BMS_NA_PROJECT_TESTING_TEMPLATE_HEAD h ON h.id=d.testing_template_head_id
		 where 1=1 
		<if test="header_id !=null and header_id !=''">
			and d.testing_template_head_id=#{header_id}
		</if>
		<if test="project_id !=null and project_id !=''">
			and h.project_id=#{project_id}
		</if>
		<if test="test_type_value !=null and test_type_value !=''">
			and h.test_type_value=#{test_type_value}
		</if>
	</select>
	<select id="getKeyPartsTraceList" parameterType="Map" resultType="Map">
		select h.bus_number bus_number,concat(p.project_no,' ',p.project_name) project_name,f.factory_name plant,
		f.id production_plant_id,p.id project_id,u.username editor,h.supervisor_date
	    from BMS_NA_BUS_TRACE h
	    left join BMS_NA_PROJECT_TRACE_TEMPLATE t on t.id=h.trace_template_id
		left join BMS_NA_PROJECT p on p.id=h.project_id
		left join BMS_NA_BASE_FACTORY f on f.id=h.production_plant_id
		left join BMS_NA_BASE_USER u on u.id=h.supervisor_id
		where 1=1 and h.bus_number is not null
		<if test="project_no !=null and project_no !=''">
			and p.project_no=#{project_no}
		</if>
		<if test="bus_type !=null and bus_type !='All'">
			and p.bus_type=#{bus_type}
		</if>
		<if test="bus_number !=null and bus_number !=''">
			and h.bus_number=#{bus_number}
		</if>
			group by h.bus_number order by p.project_no desc,h.bus_number asc
		<if test="start !=null">
			limit #{start},#{length}
		</if>
	</select>
	
	<select id="getKeyPartsTraceCount" parameterType="Map" resultType="int">
		select count(distinct(h.bus_number)) from BMS_NA_BUS_TRACE h
	    left join BMS_NA_PROJECT_TRACE_TEMPLATE t  on t.id=h.trace_template_id
		left join BMS_NA_PROJECT p on p.id=h.project_id
		left join BMS_NA_BASE_FACTORY f on f.id=h.production_plant_id
		left join BMS_NA_BASE_USER u on u.id=h.editor_id
		where 1=1
		<if test="project_no !=null and project_no !=''">
			and p.project_no=#{project_no}
		</if>
		<if test="bus_type !=null and bus_type !='All'">
			and p.bus_type=#{bus_type}
		</if>
		<if test="bus_number !=null and bus_number !=''">
			and h.bus_number=#{bus_number}
		</if>
	</select>
	<select id="getBusNumberDetailList" parameterType="Map" resultType="Map">
		select t.* from BMS_NA_BUS_TRACE t where 1=1 and t.bus_number=#{bus_number}
		<if test="plant !=null and plant !=''">
			and t.production_plant_id=#{plant}
		</if>
		<if test="workshop !=null and workshop !='All'">
			and t.workshop=#{workshop}
		</if>
		<if test="station !=null and station !=''">
			and t.station=#{station}
		</if>
	</select>
	<select id="getBusNumberTemplateList" parameterType="Map" resultType="Map">
		select t.bus_number,h.SAP_material,t.id trace_id,h.id template_id,
		h.parts_name,h.vendor,h.workshop,h.station ,t.batch
	    from BMS_NA_PROJECT_TRACE_TEMPLATE h
	    left join BMS_NA_BUS_TRACE t on h.id=t.trace_template_id and t.bus_number=#{bus_number}
		where h.project_id=#{project_id} and h.version=(select max(version) from
		 BMS_NA_PROJECT_TRACE_TEMPLATE t1 where t1.project_id=#{project_id})
	</select>
	<insert id="saveKeyParts" parameterType="Map" useGeneratedKeys="true" keyProperty="id" >
		<selectKey resultType="int" keyProperty="id" order="AFTER">
			SELECT
			LAST_INSERT_ID()
		</selectKey>
		insert into BMS_NA_BUS_TRACE 
		(project_id,trace_template_id,production_plant_id,bus_number,item_no,SAP_material,
		parts_name,vendor,workshop,station,batch,editor_id,edit_date)
		values
		<foreach collection="list" item="detail" index="index" separator=",">
			(#{detail.project_id},#{detail.trace_template_id},#{detail.production_plant_id},
			#{detail.bus_number},#{detail.item_no},#{detail.SAP_material},
		    #{detail.parts_name},#{detail.vendor},#{detail.workshop},#{detail.station},
		    #{detail.batch},#{detail.editor_id},#{detail.edit_date})
		</foreach>		
	</insert>
	<update id="updateKeyParts" parameterType="List">
		<foreach collection="list" index="index" item="item" separator=";">
			update BMS_NA_BUS_TRACE set batch=#{item.batch}
			<if test="item.type !=null and item.type =='audit'">
			  ,supervisor_id=#{item.editor_id},supervisor_date=#{item.edit_date},
			  editor_id=#{item.editor_id},edit_date=#{item.edit_date}
			</if>
			<if test="item.type !=null and item.type =='modify'">
			  ,editor_id=#{item.editor_id},edit_date=#{item.edit_date}
			</if>
			 where id=#{item.trace_id}
		</foreach>
	</update>
	<select id="getInspectionRecordList" parameterType="Map" resultType="Map">
		select h.bus_number bus_number,concat(p.project_no,' ',p.project_name) project_name,f.factory_name plant,
		f.id production_plant_id,p.id project_id,u.username supervisor,h.supervisor_date,
		qc_sign,qc_sign_date
	    from BMS_NA_BUS_INSPECTION_RECORD h
        left join BMS_NA_PROJECT_BUS b on b.bus_number=h.bus_number
		left join BMS_NA_PROJECT p on p.id=b.project_id
		left join BMS_NA_BASE_FACTORY f on f.id=b.production_plant_id
		left join BMS_NA_BASE_USER u on u.id=h.supervisor_id
		where 1=1
		<if test="project_no !=null and project_no !=''">
			and p.project_no=#{project_no}
		</if>
		<if test="plant !=null and plant !=''">
			and p.production_plant_id=#{plant}
		</if>
		<if test="bus_number !=null and bus_number !=''">
			and h.bus_number=#{bus_number}
		</if>
			group by h.bus_number order by p.project_no desc
		<if test="start !=null and length!=-1">
			limit #{start},#{length}
		</if>
	</select>
	
	<select id="getInspectionRecordCount" parameterType="Map" resultType="int">
		select count(distinct(h.bus_number))
	    from BMS_NA_BUS_INSPECTION_RECORD h
        left join BMS_NA_PROJECT_BUS b on b.bus_number=h.bus_number
		left join BMS_NA_PROJECT p on p.id=b.project_id
		left join BMS_NA_BASE_FACTORY f on f.id=b.production_plant_id
		left join BMS_NA_BASE_USER u on u.id=h.supervisor_id
		where 1=1
		<if test="project_no !=null and project_no !=''">
			and p.project_no=#{project_no}
		</if>
		<if test="plant !=null and plant !=''">
			and p.production_plant_id=#{plant}
		</if>
		<if test="bus_number !=null and bus_number !=''">
			and h.bus_number=#{bus_number}
		</if>
	</select>
	<insert id="saveInspectionRecord" parameterType="Map" useGeneratedKeys="true" keyProperty="id" >
		<selectKey resultType="int" keyProperty="id" order="AFTER">
			SELECT
			LAST_INSERT_ID()
		</selectKey>
		insert into BMS_NA_BUS_INSPECTION_RECORD 
		(bus_number,workshop,station,process_name,template_id,inspection_item,self_inspection,
		specification_and_standard,supervisor_id,supervisor_date,editor_id,edit_date)
		values (#{bus_number},#{workshop},#{station},#{process_name},#{template_id},#{inspection_item},
		#{self_inspection},#{specification_and_standard},#{editor_id},
		#{edit_date},#{editor_id},#{edit_date})
	</insert>
	<select id="getInspectionRecordDetail" parameterType="Map" resultType="Map">
		select h.id,bus_number,workshop,station,process_name,inspection_item,
		specification_and_standard,self_inspection,qc_inspection,
		concat(self_sign,' ',self_sign_date) self_str,concat(qc_sign,' ',qc_sign_date) qc_str,
		u.username supervisor,h.supervisor_date,remark
	    from BMS_NA_BUS_INSPECTION_RECORD h
		left join BMS_NA_BASE_USER u on u.id=h.supervisor_id
		where 1=1
<!-- 		<if test="bus_number !=null and bus_number !=''"> -->
			and h.bus_number=#{bus_number}
<!-- 		</if> -->
	</select>
	<update id="updateInspectionRecord" parameterType="List">
		<foreach collection="list" index="index" item="item" separator=";">
			update BMS_NA_BUS_INSPECTION_RECORD set
			<if test="item.type !=null and item.type =='self'">
			   self_sign=#{item.user_name},self_sign_date=#{item.edit_date},
			   self_inspection=#{item.self_inspection},remark=concat(ifnull(remark,''),' ',#{item.remark})
			</if>
			<if test="item.type !=null and item.type =='qc'">
			   qc_sign=#{item.user_name},qc_sign_date=#{item.edit_date},
			   qc_inspection=#{item.qc_inspection},remark=concat(ifnull(remark,''),' ',#{item.remark})
			</if>
			 where id=#{item.id}
		</foreach>
	</update>
	
	<select id="getDefectCodeType" parameterType="Map" resultType="Map">
		SELECT DISTINCT(D.defect_type) AS defect_type FROM BMS_NA_DEFECT_CODE D
	</select>
	<select id="getDefectCodeInfo" parameterType="Map" resultType="Map">
		SELECT D.id,D.serious_level,D.defect_code,D.defect_name FROM BMS_NA_DEFECT_CODE D WHERE D.defect_type = #{defect_type}
	</select>
	<select id="getLocationList" parameterType="Map" resultType="Map">
		SELECT * FROM BMS_NA_MAIN_LOCATION
	</select>
	
	<insert id="addPunch" parameterType="Map" useGeneratedKeys="true" keyProperty="id" >
		<selectKey resultType="int" keyProperty="id" order="AFTER">
			SELECT
			LAST_INSERT_ID()
		</selectKey>
		INSERT INTO BMS_NA_BUS_PUNCH_LIST
		(plant, bus_number, workshop, source_workshop, main_location_id, main_location,
		orientation, problem_description, defect_codes_id, defect_codes, responsible_leader,
		qc_inspector, date_found)		
		VALUES(#{plant},#{bus_number},#{workshop},#{src_workshop},#{main_location_id},#{main_location},
		#{Orientation},#{ProblemDescription},#{defect_codes_id},#{defect_codes},#{responsible_leader},
		#{qc_inspector},#{date_found})
	</insert>
	<select id="getPunchList" parameterType="Map" resultType="Map">
		SELECT p.*,d.defect_type FROM BMS_NA_BUS_PUNCH_LIST p
		LEFT JOIN BMS_NA_DEFECT_CODE d ON p.defect_codes_id = d.id
		WHERE 1=1
		<if test="id !=null and id !=''">
			and p.id = #{id}
		</if>
		<if test="plant !=null and plant !=''">
			and p.plant = #{plant}
		</if>
		<if test="workshop !=null and workshop !=''">
			and p.workshop = #{workshop}
		</if>
		<if test="status == 1">
			and p.quality_initials IS NULL
		</if>
		<if test="status == 2">
			and p.quality_initials IS NOT NULL
		</if>
		<if test="bus_number !=null and bus_number !=''">
			and p.bus_number = #{bus_number}
		</if>
		<if test="start!=null and length!=-1">
			LIMIT #{start} ,#{length} 
		</if>
	</select>
	<select id="getPunchListCount" parameterType="Map" resultType="int">
		SELECT COUNT(id) FROM BMS_NA_BUS_PUNCH_LIST WHERE 1=1
		<if test="plant !=null and plant !=''">
			and plant = #{plant}
		</if>
		<if test="workshop !=null and workshop !=''">
			and workshop = #{workshop}
		</if>
		<if test="status == 1">
			and quality_initials IS NULL
		</if>
		<if test="status == 2">
			and quality_initials IS NOT NULL
		</if>
		<if test="bus_number !=null and bus_number !=''">
			and bus_number = #{bus_number}
		</if>
	</select>
	<update id='editPunchList' parameterType="Map">
		UPDATE BMS_NA_BUS_PUNCH_LIST
		SET plant=#{plant}, bus_number=#{bus_number}, workshop=#{workshop}, source_workshop=#{src_workshop}, main_location_id=#{main_location_id},
		main_location=#{main_location}, orientation=#{orientation}, problem_description=#{problem_description}, defect_codes_id=#{defect_codes_id}, 
		defect_codes=#{defect_codes},responsible_leader=#{responsible_leader}, qc_inspector=#{qc_inspector} 
		WHERE id=#{id}
	</update>

	<select id="getTestingRecordList" parameterType="Map" resultType="Map">
		select h.id,p.bus_type,h.bus_number,k.key_name testing_type,signature,h.edit_date,
	    concat(p.project_no,' ',p.project_name) project_name,h.test_type_value from BMS_NA_BUS_TESTING_RECORD h
	    left join BMS_NA_PROJECT_BUS b on b.bus_number=h.bus_number
		left join BMS_NA_PROJECT p on p.id=b.project_id
		left join BMS_NA_BASE_KEY k on k.value=h.test_type_value and k.key_code='TESTING_TYPE'
		where 1=1
		<if test="project_no !=null and project_no !=''">
			and p.project_no=#{project_no}
		</if>
		<if test="bus_type !=null and bus_type !='All' and bus_type !=''">
			and p.bus_type=#{bus_type}
		</if>
		<if test="bus_number !=null and bus_number !=''">
			and h.bus_number=#{bus_number}
		</if>
		<if test="test_type_value !=null and test_type_value !=''">
			and h.test_type_value=#{test_type_value}
		</if>
			group by h.bus_number,h.test_type_value order by h.bus_number,h.test_type_value
		<if test="start !=null">
			limit #{start},#{length}
		</if>
	</select>
	
	<select id="getTestingRecordCount" parameterType="Map" resultType="int">
		select count(distinct(h.bus_number))
	    from BMS_NA_BUS_TESTING_RECORD h
	    left join BMS_NA_PROJECT_BUS b on b.bus_number=h.bus_number
		left join BMS_NA_PROJECT p on p.id=b.project_id
		where 1=1
		<if test="project_no !=null and project_no !=''">
			and p.project_no=#{project_no}
		</if>
		<if test="bus_type !=null and bus_type !='All' and bus_type !=''">
			and p.bus_type=#{bus_type}
		</if>
		<if test="bus_number !=null and bus_number !=''">
			and h.bus_number=#{bus_number}
		</if>
		<if test="test_type_value !=null and test_type_value !=''">
			and h.test_type_value=#{test_type_value}
		</if>
	</select>
	<insert id="saveTestingRecord" parameterType="Map" useGeneratedKeys="true" keyProperty="id" >
		<selectKey resultType="int" keyProperty="id" order="AFTER">
			SELECT
			LAST_INSERT_ID()
		</selectKey>
		insert into BMS_NA_BUS_TESTING_RECORD 
		(bus_number,test_type_value,item_no,inspection_item,specification_standard,first_inspection,first_sign,editor_id,edit_date)
		values
		<foreach collection="detail" item="detail" index="index" separator=",">
			(#{bus_number},#{test_type_value},#{detail.item_no},#{detail.inspection_item},#{detail.specification_standard},
			#{detail.first_inspection},#{detail.first_sign},#{editor_id},#{edit_date})
		</foreach>		
	</insert>
	<select id="getTestingRecordDetailList" parameterType="Map" resultType="Map">
		select * from BMS_NA_BUS_TESTING_RECORD 
		where 1=1 and bus_number=#{bus_number} and test_type_value=#{test_type_value}
	</select>
	<update id="updateTestingRecord" parameterType="List">
		<foreach collection="list" index="index" item="item" separator=";">
			update BMS_NA_BUS_TESTING_RECORD set
			<if test="item.type !=null and item.type =='first'">
			   first_sign=#{item.first_sign},first_inspection=#{item.first_inspection}
			</if>
			<if test="item.type !=null and item.type =='repeat'">
			   re_sign=#{item.re_sign},re_inspection=#{item.re_inspection}
			</if>
			 where id=#{item.id}
		</foreach>
	</update>

	<update id='leadInitialsPunch' parameterType="Map">
		UPDATE BMS_NA_BUS_PUNCH_LIST
		SET lead_initials=#{lead_initials}, lead_initials_date=#{lead_initials_date}
		WHERE id=#{id}
	</update>
	<update id='qcInitialsPunch' parameterType="Map">
		UPDATE BMS_NA_BUS_PUNCH_LIST
		SET quality_initials=#{quality_initials}, quality_initials_date=#{quality_initials_date}
		WHERE id=#{id}
	</update>

</mapper>
