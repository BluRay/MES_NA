<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.byd.bms.order.dao.IOrderDao">

	<select id="getOrderList" parameterType="Map" resultType="Map">
		select o.*,u.username editor
		from BMS_NA_PROJECT o
		left join BMS_NA_BASE_USER u on u.id=o.editor_id 
		where 1=1
		<if test="orderNo !=null and orderNo !=''">
			and o.project_no like CONCAT('%',#{orderNo},'%')   
		</if>		
		<if test="orderId !=null and orderId !=''">
			and o.id = #{orderId} 
		</if>
		<if test="orderStatus !=null and orderStatus !='All'">
			and o.project_status = #{orderStatus} 
		</if>
		<if test="actYear !=null and actYear !=''">
			and o.project_date like concat(#{actYear},'%') 
		</if>
		<if test="factory !=null and factory !='all'">
			and find_in_set(o.production_plant_id ,#{factory} )
		</if>
			ORDER BY o.project_no DESC
		<if test="start !=null and length !='-1' ">
			LIMIT #{start} ,#{length} 
		</if>			
	</select>
	<select id="getOrderByNo" parameterType="Map" resultType="Map">
	    SELECT * FROM BMS_NA_PROJECT o where 1=1 
	    <if test="orderNo !=null and orderNo !=''">
			and o.project_no=#{orderNo} 
		</if>
		<if test="orderId !=null and orderId !=''">
			and o.id=#{orderId} 
		</if>
	</select>
	<select id="getOrderTotalCount" parameterType="Map" resultType="int">
		SELECT count(o.id) FROM BMS_NA_PROJECT o
		<!-- LEFT JOIN BMS_BASE_FACTORY a ON f.factory_id = a.id  -->
		where 1=1
		<if test="orderNo !=null and orderNo !=''">
			and o.project_no like CONCAT('%',#{orderNo},'%')   
		</if>
		<if test="orderName !=null and orderName !=''">
			and o.project_name like CONCAT('%',#{orderName},'%')   
		</if>
		<if test="orderStatus !=null and orderStatus !='All'">
			and o.project_status = #{orderStatus} 
		</if>
		<if test="actYear !=null and actYear !=''">
			and o.project_date like concat(#{actYear},'%') 
		</if>
		<if test="factory !=null and factory !=''">
			and find_in_set(o.production_plant,#{factory} )
		</if>
	</select>
	
	<update id="updateOrder" parameterType="com.byd.bms.order.model.BmsOrder">
		update BMS_NA_PROJECT 
		set  quantity=#{quantity},project_date=#{project_date},delivery_date=#{delivery_date},sales_manager=#{sales_manager},
		project_manager=#{project_manager},editor_id=#{editor_id},edit_date=#{edit_date}
		where id=#{id}
	</update>
	
	<select id="queryOrderSerial" parameterType="map" resultType="String">
		<![CDATA[
 			select max(project_no) from BMS_NA_PROJECT where project_no like concat('%',#{year},'%')
 		]]>
	</select>
	
	<select id="queryBusLatestSerial" parameterType="Map" resultType="String">
		select ifnull(count(id),0) from BMS_NA_PROJECT_BUS where project_id=#{project_id}
	</select>
	
	<insert id="insertOrder" useGeneratedKeys="true" keyProperty="id" parameterType="com.byd.bms.order.model.BmsOrder">
		<selectKey resultType="int" keyProperty="id" order="AFTER">
			SELECT
			LAST_INSERT_ID()
		</selectKey>
		<![CDATA[
			insert into BMS_NA_PROJECT(project_no,project_name,search_name,customer,bus_type,quantity,project_date,delivery_date,
			production_plant_id,production_plant,sales_manager,project_manager,project_status,editor_id,edit_date) 
			values(#{project_no},#{project_name},#{search_name},#{customer},#{bus_type},#{quantity},#{project_date},#{delivery_date},
			#{production_plant_id},#{production_plant},#{sales_manager},#{project_manager},#{project_status},#{editor_id},#{edit_date})
		]]>
	</insert>
	
	<insert id="insertBus" parameterType="List" >
		insert into BMS_NA_PROJECT_BUS (project_id,production_plant_id,bus_number)
		values 
		<foreach collection="list" item='bus' separator=','>
			(#{bus.project_id},#{bus.production_plant_id},#{bus.bus_number})
		</foreach>
	</insert>
	
	<select id="queryBusNumberByOrder" parameterType="Map" resultType="Map">
		SELECT b.id,b.factory_id,f.factory_name,b.order_id,b.bus_number,b.vin,p.workshop,b.latest_process_id,
		CASE WHEN ISNULL(k.key_name) THEN CONCAT(p.process_code ,' ', p.process_name) ELSE CONCAT(p.process_code ,' ',p.process_name,'(',k.key_name,')') END as process_name,
		b.welding_online_date,b.welding_offline_date,b.painting_online_date,b.painting_offline_date,b.chassis_online_date,b.chassis_offline_date,
		b.assembly_online_date,b.assembly_offline_date,b.warehousing_date,b.dispatch_date,o.order_no,o.order_name,o.order_qty 
		FROM BMS_PLAN_BUS b
		LEFT OUTER JOIN BMS_BASE_FACTORY f ON b.factory_id = f.id
		LEFT OUTER JOIN BMS_OR_ORDER o ON b.order_id = o.id
		LEFT OUTER JOIN BMS_BASE_PROCESS p ON b.latest_process_id = p.id
		LEFT OUTER JOIN BMS_BASE_KEY k ON k.value = p.plan_node_id and k.key_code = 'PLAN_CODE' 
		WHERE b.order_id = #{order_id} 
		<if test="factory_id != null">
			 and b.factory_id = #{factory_id} 
		</if>
		<if test="order_config_id != null">
			 and b.order_config_id = #{order_config_id} 
		</if>
		order by cast(reverse(substr(reverse(bus_number),1,instr(reverse(bus_number),'-')-1)) as signed)
	</select>
	
	<select id="queryOrderQueryList" parameterType="Map" resultType="Map">
		select o.id,CONCAT(o.order_no,' ',o.order_name,t.bus_type_code,' ',o.order_qty,'台') AS order_desc,o.order_type,o.order_area,o.delivery_date,o.customer,
		fo.factory_id,f.factory_name,fo.production_qty,c.order_config_name,fc.product_qty,fc.sequence,c.id order_config_id,fc.product_qty config_qty,
		(SELECT ifnull(SUM(p.quantity),0) FROM BMS_PD_WORKSHOP_SUPPLY p WHERE p.order_id = o.id AND p.factory_id = fo.factory_id AND supply_workshop ='自制件' AND receive_workshop ='部件') as zzj_offline_count,
		(SELECT ifnull(SUM(p.online_real_qty),0) FROM BMS_PD_PARTS_PLAN_FINISH p WHERE p.order_id = o.id AND p.factory_id = fo.factory_id AND p.parts_id=0) as parts_online_count,
		(SELECT ifnull(SUM(p.offline_real_qty),0) FROM BMS_PD_PARTS_PLAN_FINISH p WHERE p.order_id = o.id AND p.factory_id = fo.factory_id AND p.parts_id=0) as parts_offline_count,
		(SELECT COUNT(b.id) FROM BMS_PLAN_BUS b WHERE b.welding_online_date >0 AND b.order_id = o.id AND b.order_config_id=c.id AND b.factory_id = fo.factory_id) as welding_online_count,
		(SELECT COUNT(b.id) FROM BMS_PLAN_BUS b WHERE b.welding_offline_date  >0 AND b.order_id = o.id AND b.order_config_id=c.id AND b.factory_id = fo.factory_id) as welding_offline_count,
		(SELECT COUNT(b.id) FROM BMS_PLAN_BUS b WHERE b.fiberglass_offline_date >0 AND b.order_id = o.id AND b.order_config_id=c.id AND b.factory_id = fo.factory_id) as fiberglass_offline_count,
		(SELECT COUNT(b.id) FROM BMS_PLAN_BUS b WHERE b.painting_online_date >0 AND b.order_id = o.id AND b.order_config_id=c.id AND b.factory_id = fo.factory_id) as painting_online_count,
		(SELECT COUNT(b.id) FROM BMS_PLAN_BUS b WHERE b.painting_offline_date >0 AND b.order_id = o.id AND b.order_config_id=c.id AND b.factory_id = fo.factory_id) as painting_offline_count,
		(SELECT COUNT(b.id) FROM BMS_PLAN_BUS b WHERE b.chassis_online_date >0 AND b.order_id = o.id AND b.order_config_id=c.id AND b.factory_id = fo.factory_id) as chassis_online_count,
		(SELECT COUNT(b.id) FROM BMS_PLAN_BUS b WHERE b.chassis_offline_date >0 AND b.order_id = o.id AND b.order_config_id=c.id AND b.factory_id = fo.factory_id) as chassis_offline_count,
		(SELECT COUNT(b.id) FROM BMS_PLAN_BUS b WHERE b.assembly_online_date >0 AND b.order_id = o.id AND b.order_config_id=c.id AND b.factory_id = fo.factory_id) as assembly_online_count,
		(SELECT COUNT(b.id) FROM BMS_PLAN_BUS b WHERE b.assembly_offline_date >0 AND b.order_id = o.id AND b.order_config_id=c.id AND b.factory_id = fo.factory_id) as assembly_offline_count,
		(SELECT COUNT(b.id) FROM BMS_PLAN_BUS b WHERE b.warehousing_date>0 AND b.order_id = o.id AND b.order_config_id=c.id AND b.factory_id = fo.factory_id) as warehousing_count,
		(SELECT COUNT(b.id) FROM BMS_PLAN_BUS b WHERE b.dispatch_date>0 AND b.order_id = o.id AND b.order_config_id=c.id AND b.factory_id = fo.factory_id) as dispatch_count,
		(select review_status from BMS_OR_ORDER_REVIEW_RESULTS r where fo.factory_id=r.factory_id and fo.order_id=r.order_id) as review_result
		from BMS_OR_ORDER o
		left join BMS_BASE_BUS_TYPE t on o.bus_type_id=t.id
		left join BMS_OR_FACTORY_ORDER fo on fo.order_id=o.id
		left join BMS_BASE_FACTORY f on fo.factory_id=f.id
		left join BMS_OR_FACTORY_ORDER_CONFIG fc on fc.order_id=o.id and fc.factory_id=fo.factory_id
		left join BMS_OR_ORDER_CONFIG c on fc.order_config_id=c.id
		where 1=1
		<if test="order_no !=null and order_no !=''">
			and o.order_no=#{order_no}
		</if>
		<if test="factory !=null and factory !=''">
			and find_in_set(fo.factory_id,#{factory})
		</if>
		<if test="actYear !=null and actYear !=''">
			and o.productive_year=#{actYear}
		</if>
		<if test="status !=null and status !=''">
			and fo.status=#{status}
		</if>
		 order by o.id desc,fo.factory_id
		<if test="start !=null and length !='-1'">
			limit #{start},#{length}
		</if>
	</select>
	
	<select id="queryOrderQueryListCount" parameterType="Map" resultType="int">
		select count(o.id) 
		from BMS_OR_ORDER o
		left join BMS_BASE_BUS_TYPE t on o.bus_type_id=t.id
		left join BMS_OR_FACTORY_ORDER fo on fo.order_id=o.id
<!-- 		left join BMS_BASE_FACTORY f on fo.factory_id=f.id -->
		left join BMS_OR_FACTORY_ORDER_CONFIG fc on fc.order_id=o.id and fc.factory_id=fo.factory_id
		left join BMS_OR_ORDER_CONFIG c on fc.order_config_id=c.id
		where 1=1
		<if test="order_no !=null and order_no !=''">
			and o.order_no=#{order_no}
		</if>
		<if test="factory !=null and factory !=''">
			and find_in_set(fo.factory_id,#{factory})
		</if>
		<if test="actYear !=null and actYear !=''">
			and o.productive_year=#{actYear}
		</if>
		<if test="status !=null and status !=''">
			and fo.status=#{status}
		</if>
	</select>
	
	<select id="queryBusInProcessByProject" parameterType="String" resultType="Map">
		select count(id) as num_in_process from BMS_NA_PROJECT_BUS where project_id=#{project_id} and welding_online>0
	</select>
	
	<select id="getBusNumberStartByProject" parameterType="String" resultType="Map">
		select min(cast(substring_index(bus_number,'-',-1) as signed)) as bus_number_start,
		max(cast(substring_index(bus_number,'-',-1) as signed)) as bus_number_end
		from BMS_NA_PROJECT_BUS where project_id=#{project_id}
	</select>
	
	<!-- 海外 MES系统 start -->
	<select id="getProjectBomList" parameterType="Map" resultType="Map">
		SELECT p.*,h.DCN,h.version,u.username,h.edit_date FROM BMS_NA_PROJECT p			
		LEFT JOIN BMS_NA_PROJECT_BOM_HEAD h ON h.project_id = p.id
		and h.version=(select max(version) from BMS_NA_PROJECT_BOM_HEAD h1 where h1.project_id = p.id)
		LEFT JOIN BMS_NA_BASE_USER u ON u.id=h.editor_id
		where 1=1
		<if test="projectNo !=null and projectNo !=''">
			and p.project_no like CONCAT('%',#{projectNo},'%')   
		</if>
		<if test="status !=null and status !=''">
			and p.project_status = #{status} 
		</if>
		<if test="actYear !=null and actYear !=''">
			and p.project_date = #{actYear} 
		</if>
		<if test="plant !=null and plant !=''">
			and find_in_set(p.production_plant ,#{plant} )
		</if>
			ORDER BY p.id DESC
		<if test="start !=null and length !='-1' ">
			LIMIT #{start} ,#{length} 
		</if>			
	</select>
	
	<select id="getProjectBomTotalCount" parameterType="Map" resultType="int">
		SELECT count(1) FROM BMS_NA_PROJECT p			
		LEFT JOIN BMS_NA_PROJECT_BOM_HEAD h ON h.project_id = p.id
		and h.version=(select max(version) from BMS_NA_PROJECT_BOM_HEAD h1 where h1.project_id = p.id) 
		where 1=1
		<if test="projectNo !=null and projectNo !=''">
			and p.project_no like CONCAT('%',#{projectNo},'%')   
		</if>
		<if test="status !=null and status !=''">
			and p.project_status = #{status} 
		</if>
		<if test="actYear !=null and actYear !=''">
			and p.project_date = #{actYear} 
		</if>
		<if test="plant !=null and plant !=''">
			and find_in_set(p.production_plant ,#{plant} )
		</if>
	</select>
	<select id="queryBomHeader" parameterType="Map" resultType="Map">
		select * from BMS_NA_PROJECT_BOM_HEAD where project_id=#{projectId}
		 and version=#{version} and document_no=#{documentNo} and dcn=#{dcn}
	</select>
	
	<insert id="saveBomHeader" parameterType="Map" useGeneratedKeys="true" keyProperty="id" >
		<selectKey resultType="int" keyProperty="id" order="AFTER">
			SELECT
			LAST_INSERT_ID()
		</selectKey>
		insert into BMS_NA_PROJECT_BOM_HEAD (project_id,document_no,dcn,version,editor_id,edit_date)
		values (#{projectId},#{documentNo},#{dcn},#{version},#{editor_id},#{edit_date})
	</insert>
	
	<update id='updateBomHeader' parameterType="Map">
		update BMS_NA_PROJECT_BOM_HEAD set editor_id=#{editor_id} ,edit_date=#{edit_date}
		where project_id=#{projectId} and version=#{version}
		 and document_no=#{documentNo} and dcn=#{dcn}
	</update>
	
	<insert id="saveBomDetails" parameterType="Map" useGeneratedKeys="true" keyProperty="id" >
		<selectKey resultType="int" keyProperty="id" order="AFTER">
			SELECT
			LAST_INSERT_ID()
		</selectKey>
		insert into BMS_NA_PROJECT_BOM_ITEM 
		(bom_head_id,item_no,SAP_material,BYD_PN,part_name,specification,unit,quantity,en_description,vendor,station_code,note)
		values
		<foreach collection="bomList" item="detail" index="index" separator=",">
			(#{bom_head_id},#{detail.item_no},#{detail.SAP_material},#{detail.BYD_PN},#{detail.part_name},
			#{detail.specification},#{detail.unit},#{detail.quantity},#{detail.en_description},#{detail.vendor},
			#{detail.station_code},#{detail.note})
		</foreach>		
	</insert>
	
	<delete id="deleteBomByHeader" parameterType="int">
		delete from BMS_NA_PROJECT_BOM_ITEM where bom_head_id=#{header_id}
	</delete>
	<select id="getBomItemList" parameterType="Map" resultType="Map">
		SELECT d.* FROM BMS_NA_PROJECT_BOM_ITEM d
		LEFT JOIN BMS_NA_PROJECT_BOM_HEAD  h on d.bom_head_id=h.id			
		LEFT JOIN BMS_NA_PROJECT p ON h.project_id = p.id
		and h.version=(select max(version) from BMS_NA_PROJECT_BOM_HEAD h1 where h1.project_id = p.id)
		where p.project_no=#{projectNo}  
		<if test="sapNo !=null and sapNo !=''">
			and d.SAP_material = #{sapNo} 
		</if>
		<if test="stationCode !=null and stationCode !=''">
			and p.station_code = #{stationCode} 
		</if>
		ORDER BY d.id 
		<if test="start !=null and length !='-1' ">
			LIMIT #{start} ,#{length} 
		</if>			
	</select>
	
	<select id="getBomItemTotalCount" parameterType="Map" resultType="int">
		SELECT count(1) FROM BMS_NA_PROJECT_BOM_ITEM d			
		LEFT JOIN BMS_NA_PROJECT_BOM_HEAD  h on d.bom_head_id=h.id			
		LEFT JOIN BMS_NA_PROJECT p ON h.project_id = p.id
		and h.version=(select max(version) from BMS_NA_PROJECT_BOM_HEAD h1 where h1.project_id = p.id)
		where p.project_no=#{projectNo}  
		<if test="sapNo !=null and sapNo !=''">
			and d.SAP_material = #{sapNo} 
		</if>
		<if test="stationCode !=null and stationCode !=''">
			and p.station_code = #{stationCode} 
		</if>
		<if test="version !=null and version !=''">
			and h.version = #{version} 
		</if>
	</select>
	<select id="getMaxVersion" parameterType="Map" resultType="Map">
		SELECT h.* FROM BMS_NA_PROJECT_BOM_HEAD h
		 LEFT JOIN BMS_NA_PROJECT p ON h.project_id = p.id
		where p.project_no=#{projectNo} order by id desc LIMIT 0 ,2 		
	</select>
	<select id="getBomCompareList" parameterType="Map" resultType="Map">
        select SAP_material,GROUP_CONCAT(version) as version,item_no,BYD_PN,part_name,specification,unit,quantity,en_description,vendor,station_code,note 
		  from ( SELECT  (
		   case h.version when '${currentVersion}' then 'current' when '${prevVersion}' then 'prev' end) version,SAP_material,
				item_no,BYD_PN,part_name,specification,unit,d.quantity,en_description,vendor,station_code,note 
		        FROM BMS_NA_PROJECT_BOM_ITEM d
				LEFT JOIN BMS_NA_PROJECT_BOM_HEAD  h on d.bom_head_id=h.id			
				LEFT JOIN BMS_NA_PROJECT p ON h.project_id = p.id
				where p.project_no=#{projectNo} and h.version in ('${currentVersion}','${prevVersion}')
		) t where 1=1
		<if test="sapNo !=null and sapNo !=''">
			and d.SAP_mateiral = #{sapNo} 
		</if>
		<if test="stationCode !=null and stationCode !=''">
			and d.station_code = #{stationCode} 
		</if>
		GROUP BY SAP_material,item_no,BYD_PN,part_name,specification,unit,quantity,en_description,vendor,station_code,note order by CAST(item_no AS SIGNED)
	</select>
	<select id="getBomCompareDiffList" parameterType="Map" resultType="Map">
        select * from (
        select SAP_material,GROUP_CONCAT(version) as version,item_no,BYD_PN,part_name,specification,unit,quantity,en_description,vendor,station_code,note 
		  from ( SELECT  (
		   case h.version when '${currentVersion}' then 'current' when '${prevVersion}' then 'prev' end) version,SAP_material,
				item_no,BYD_PN,part_name,specification,unit,d.quantity,en_description,vendor,station_code,note 
		        FROM BMS_NA_PROJECT_BOM_ITEM d
				LEFT JOIN BMS_NA_PROJECT_BOM_HEAD  h on d.bom_head_id=h.id			
				LEFT JOIN BMS_NA_PROJECT p ON h.project_id = p.id
				where p.project_no=#{projectNo} and h.version in ('${currentVersion}','${prevVersion}')
		) t where 1=1
		<if test="sapNo !=null and sapNo !=''">
			and d.SAP_mateiral = #{sapNo} 
		</if>
		<if test="stationCode !=null and stationCode !=''">
			and d.station_code = #{stationCode} 
		</if>
		GROUP BY SAP_material,item_no,BYD_PN,part_name,specification,unit,quantity,en_description,vendor,station_code,note order by CAST(item_no AS SIGNED)
	   ) t1 where t1.version in ('current','prev') 
	</select>

	<select id="queryProjectQueryList" parameterType="Map" resultType="Map">
		select o.id,o.project_no,o.project_name,o.delivery_date,o.customer,o.quantity,o.production_plant,
		(SELECT COUNT(b.id) FROM BMS_NA_PROJECT_BUS b WHERE b.welding_online >0 AND b.project_id = o.id) as welding_online_count,
		(SELECT COUNT(b.id) FROM BMS_NA_PROJECT_BUS b WHERE b.welding_offline  >0 AND b.project_id = o.id) as welding_offline_count,
		(SELECT COUNT(b.id) FROM BMS_NA_PROJECT_BUS b WHERE b.painting_online >0 AND b.project_id = o.id) as painting_online_count,
		(SELECT COUNT(b.id) FROM BMS_NA_PROJECT_BUS b WHERE b.painting_offline >0 AND b.project_id = o.id) as painting_offline_count,
		(SELECT COUNT(b.id) FROM BMS_NA_PROJECT_BUS b WHERE b.chassis_online >0 AND b.project_id = o.id) as chassis_online_count,
		(SELECT COUNT(b.id) FROM BMS_NA_PROJECT_BUS b WHERE b.chassis_offline >0 AND b.project_id = o.id) as chassis_offline_count,
		(SELECT COUNT(b.id) FROM BMS_NA_PROJECT_BUS b WHERE b.assembly_online >0 AND b.project_id = o.id) as assembly_online_count,
		(SELECT COUNT(b.id) FROM BMS_NA_PROJECT_BUS b WHERE b.assembly_offline >0 AND b.project_id = o.id) as assembly_offline_count,
		(SELECT COUNT(b.id) FROM BMS_NA_PROJECT_BUS b WHERE b.testing>0 AND b.project_id = o.id) as testing_count,
		(SELECT COUNT(b.id) FROM BMS_NA_PROJECT_BUS b WHERE b.outgoing>0 AND b.project_id = o.id) as outgoing_count,
        (SELECT COUNT(b.id) FROM BMS_NA_PROJECT_BUS b WHERE b.delivery>0 AND b.project_id = o.id) as delivery_count      
		from BMS_NA_PROJECT o
		left join BMS_NA_BASE_BUS_TYPE t on o.bus_type=t.id
		left join BMS_NA_BASE_FACTORY f on o.production_plant=f.id
		where 1=1
		<if test="project_no !=null and project_no !=''">
			and o.project_no=#{project_no}
		</if>
		<if test="plant !=null and plant !=''">
			and find_in_set(f.id,#{plant})
		</if>
		<if test="actYear !=null and actYear !=''">
			and o.project_date=#{actYear}
		</if>
		<if test="status !=null and status !=''">
			and o.status=#{status}
		</if>
		 order by o.id desc
		<if test="start !=null and length !='-1'">
			limit #{start},#{length}
		</if>
	</select>
	
	<select id="queryProjectQueryListCount" parameterType="Map" resultType="int">
		select count(o.id) from BMS_NA_PROJECT o
		left join BMS_NA_BASE_FACTORY f on o.production_plant=f.id where 1=1
		<if test="project_no !=null and project_no !=''">
			and o.project_no=#{project_no}
		</if>
		<if test="plant !=null and plant !=''">
			and find_in_set(f.id,#{plant})
		</if>
		<if test="actYear !=null and actYear !=''">
			and o.project_date=#{actYear}
		</if>
		<if test="status !=null and status !=''">
			and o.status=#{status}
		</if>
	</select>
	<select id="queryBusNumberByProject" parameterType="Map" resultType="Map">
		SELECT b.id,b.project_id,b.bus_number,b.VIN,b.current_station,p.station,
		b.welding_online,b.welding_offline,b.painting_online,b.painting_offline,b.chassis_online,b.chassis_offline,
		b.assembly_online,b.assembly_offline,b.testing,b.outgoing,o.project_no,o.project_name
		FROM BMS_NA_PROJECT_BUS b
		LEFT OUTER JOIN BMS_NA_PROJECT o ON b.project_id = o.id
		LEFT OUTER JOIN BMS_NA_BASE_PROCESS p ON b.current_station = p.id
		WHERE b.project_id = #{project_id} 
		order by cast(reverse(substr(reverse(bus_number),1,instr(reverse(bus_number),'-')-1)) as signed)
	</select>
	<delete id="deleteUnProcessBus" parameterType="Map">
		delete from BMS_NA_PROJECT_BUS where project_id=#{project_id} 
		and cast(substring_index(bus_number,'-',-1) as signed)>=#{bus_start}
	</delete>
</mapper>
