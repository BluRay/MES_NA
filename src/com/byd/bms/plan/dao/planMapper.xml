<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.byd.bms.plan.dao.IPlanDao">

	<select id="checkImportPlanFactory" parameterType="Map" resultType="String">
		SELECT p.id FROM BMS_NA_PROJECT p WHERE 
		p.production_plant = #{factory_name} AND p.project_no = #{project_no} LIMIT 1
	</select>
	
	<insert id="insertPlanMaster" useGeneratedKeys="true" keyProperty="id" parameterType="com.byd.bms.plan.model.PlanMasterPlan">
		INSERT INTO BMS_NA_PROJECT_MASTER_PLAN
		(version, project_id, plan_node_value, plan_node, month, flag, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22, D23, D24, D25, D26, D27, D28, D29, D30, D31, editor_id, edit_date)
		VALUES(#{version}, (SELECT PR.id FROM BMS_NA_PROJECT PR WHERE PR.project_no = #{project_no}),
		(SELECT value FROM BMS_NA_BASE_KEY WHERE key_code = 'PLAN_CODE' AND key_name_en = #{plan_node}),#{plan_node},
		#{month}, #{flag}, #{D1}, #{D2}, #{D3}, #{D4}, #{D5}, #{D6}, #{D7}, #{D8}, #{D9}, #{D10}, 
		#{D11}, #{D12}, #{D13}, #{D14}, #{D15}, #{D16}, #{D17}, #{D18}, #{D19}, #{D20}, 
		#{D21}, #{D22}, #{D23}, #{D24}, #{D25}, #{D26}, #{D27}, #{D28}, #{D29}, #{D30}, #{D31}, 
		#{creator_id}, #{create_date})
	</insert>
	<select id="getPlanMasterIndex" parameterType="Map" resultType="Map">
		SELECT DISTINCT
		m.version,p.project_no,m.month,p.production_plant AS factory_name,u.display_name,m.edit_date AS create_date FROM
		BMS_NA_PROJECT_MASTER_PLAN m
		LEFT JOIN BMS_NA_PROJECT p ON m.project_id = p.id
		LEFT JOIN BMS_NA_BASE_USER u ON m.editor_id = u.staff_number
		<if test="production_plant != ''">
			and p.production_plant = #{production_plant}
		</if>
		<if test="project_no != ''">
			and p.project_no like CONCAT('%',#{project_no},'%')
		</if>
		AND flag = '0'
		ORDER BY m.version DESC
		<if test="offset!=null">
			LIMIT #{start} ,#{length} 
		</if>
	</select>
	<select id="getPlanMasterCount" parameterType="Map" resultType="int">
		SELECT COUNT(DISTINCT m.version) FROM
		BMS_NA_PROJECT_MASTER_PLAN m
		LEFT JOIN BMS_NA_PROJECT p ON m.project_id = p.id
		LEFT JOIN BMS_NA_BASE_USER u ON m.editor_id = u.staff_number
		<if test="production_plant != ''">
			and p.production_plant = #{production_plant}
		</if>
		<if test="project_no != ''">
			and p.project_no like CONCAT('%',#{project_no},'%')
		</if>
		AND flag = '0'
	</select>
	
	<update id="updatePlanMasterInfo" parameterType="com.byd.bms.plan.model.PlanMasterPlan">
		<![CDATA[
		UPDATE BMS_NA_PROJECT_MASTER_PLAN SET version=#{version},project_id=#{project_id},
		plan_node_value=#{plan_node_value},
		month=#{month},
		flag=#{flag},D1=#{D1},D2=#{D2},D3=#{D3},D4=#{D4},D5=#{D5},D6=#{D6},D7=#{D7},D8=#{D8},D9=#{D9},D10=#{D10},D11=#{D11},
		D12=#{D12},D13=#{D13},D14=#{D14},D15=#{D15},D16=#{D16},D17=#{D17},D18=#{D18},D19=#{D19},D20=#{D20},D21=#{D21},D22=#{D22},
		D23=#{D23},D24=#{D24},D25=#{D25},D26=#{D26},D27=#{D27},D28=#{D28},D29=#{D29},D30=#{D30},D31=#{D31}
		WHERE id=#{id}
		]]>
	</update>
	
	<update id="deleteProductionPlan" parameterType="Map">
		DELETE FROM BMS_NA_PROJECT_PRODUCTION_PLAN WHERE 
		project_id = (SELECT PR.id FROM BMS_NA_PROJECT PR WHERE PR.project_no = #{project_no})
		AND plan_code_value = (SELECT value FROM BMS_NA_BASE_KEY WHERE key_code = 'PLAN_CODE' AND key_name_en = #{plan_node})
		AND plan_date LIKE CONCAT('%',#{plan_month},'%')
		<if test="cur_day != ''">
		AND plan_date > #{cur_day}
		</if>
	</update>
	<update id="deleteOneProductionPlan" parameterType="Map">
		DELETE FROM BMS_NA_PROJECT_PRODUCTION_PLAN WHERE 
		project_id = #{project_id}
		AND plan_code_value = #{plan_code_value}
		AND plan_date = #{cur_day}
	</update>
	<insert id="insertProductionPlan" parameterType="Map">
	INSERT INTO BMS_NA_PROJECT_PRODUCTION_PLAN
	(project_id, plant_id, plan_code_value, plan_date, plan_qty,creator_id, creat_date, releaser_id, release_date)
	VALUES((SELECT PR.id FROM BMS_NA_PROJECT PR WHERE PR.project_no = #{project_no}),
	(SELECT id FROM BMS_NA_BASE_FACTORY WHERE factory_name = #{factory_name}),
	(SELECT value FROM BMS_NA_BASE_KEY WHERE key_code = 'PLAN_CODE' AND key_name_en = #{plan_node}),
	#{plan_date}, #{plan_qty},#{userid}, #{curTime},#{userid}, #{curTime})
	</insert>
	<insert id="insertOneProductionPlan" parameterType="Map">
	INSERT INTO BMS_NA_PROJECT_PRODUCTION_PLAN
	(project_id, plant_id, plan_code_value, plan_date, plan_qty,creator_id, creat_date, releaser_id, release_date)
	VALUES(#{project_id},
	#{plant_id},
	#{plan_code_value},
	#{plan_date}, #{plan_qty},(SELECT staff_number FROM BMS_NA_BASE_USER WHERE id = #{userid}), #{curTime},(SELECT staff_number FROM BMS_NA_BASE_USER WHERE id = #{userid}), #{curTime})
	</insert>
	
	<select id="getPlanMasterList" parameterType="Map" resultType="com.byd.bms.plan.model.PlanMasterPlan">
		SELECT
		m.D1+m.D2+m.D3+m.D4+m.D5+m.D6+m.D7+m.D8+m.D9+m.D10+m.D11+m.D12+m.D13+m.D14+m.D15+m.D16+m.D17+m.D18+m.D19+m.D20+
		m.D21+m.D22+m.D23+m.D24+m.D25+m.D26+m.D27+m.D28+m.D29+m.D30+m.D31 AS
		sumQty, k.key_name_en AS plan_node, m.*,o.project_no AS project_no,o.production_plant AS factory_name
		FROM BMS_NA_PROJECT_MASTER_PLAN m
		LEFT JOIN BMS_NA_PROJECT o ON m.project_id = o.id
		LEFT JOIN BMS_NA_BASE_KEY k ON m.plan_node_value=k.value AND key_code = 'PLAN_CODE' 
		where 1=1 and o.production_plant=#{factory_name}
		<if test="version!='' and version!=null">
			AND version = #{version}
			AND flag = (SELECT MAX(flag+0)
			FROM
			BMS_NA_PROJECT_MASTER_PLAN WHERE version = #{version})
		</if>
		<if test="plan_month!='' and plan_month!=null">
			AND m.month = #{plan_month}
			and m.version=(select m1.version from BMS_NA_PROJECT_MASTER_PLAN m1
			where m1.month = #{plan_month} and m1.project_id=m.project_id
			order by cast(m1.version as unsigned) desc,cast(m1.flag as unsigned) desc limit 1) 
			and m.flag=(select m1.flag from BMS_NA_PROJECT_MASTER_PLAN m1
			where m1.month = #{plan_month} and m1.project_id=m.project_id
			order by cast(m1.version as unsigned) desc,cast(m1.flag as unsigned) desc limit 1)			
		</if>
		<if test="project_no != '' and project_no != null">
			and project_id = (SELECT PR.id FROM BMS_NA_PROJECT PR WHERE PR.project_no = #{project_no})
			AND month=#{plan_month}
			
		</if>
		ORDER BY m.version DESC,m.flag DESC,m.month,(m.plan_node_value+0)
	</select>
	
	<insert id="insertOperateChangeLog" useGeneratedKeys="true" keyProperty="id" parameterType="com.byd.bms.util.model.BmsBaseOperateChangeLog">
		<![CDATA[
		insert into BMS_NA_BASE_OPERATE_CHANGE_LOG (
		operate_change_type_id,table_name,field_id,field_name,old_value,new_value,changer_id,change_date)
		VALUES(
		#{operate_change_type_id},#{table_name},#{field_id},#{field_name},#{old_value},#{new_value},#{changer_id},#{change_date})
		]]>
	</insert>
	
	<select id="getPlanSerach" parameterType="Map" resultType="Map">
		select record.order_desc,case record.key_name when '自制下线' then '自制件下线' when '车辆入库' then '入库' else record.key_name end as key_name
		,record.production_qty,record.order_id,record.order_no,ifnull(record.real_qty,0) real_qty,ifnull(record.total_qty,0) total_qty,ifnull(p.total_plan_qty,0) total_plan_qty 
		from
		(
		SELECT '焊装上线' key_name,p.id,p.project_no,tmp.real_qty,tmp.total_qty,SUM(p.quantity) production_qty,
		p.project_name order_desc FROM BMS_NA_PROJECT p
		LEFT JOIN (
			select count(distinct b1.bus_number) real_qty,count(distinct b.bus_number) total_qty,b.project_id
			from BMS_NA_PROJECT_BUS b 
			left join BMS_NA_PROJECT_BUS b1 on b.id=b1.id 
			<if test="start_date !=null and start_date !=''">
				and b1.welding_online > CONCAT(#{start_date},' 00:00:00')
			</if>
			<if test="end_date !=null and end_date !=''">
				and b1.welding_online &lt;= CONCAT(#{end_date},' 23:59:59')
			</if>
			where b.welding_online != '' group by b.project_id
			) tmp ON tmp.project_id=p.id
		WHERE p.production_plant= #{factory_name}
		AND p.project_no = #{project_no}
		GROUP BY p.id
	
		union all
		SELECT '焊装下线' key_name,p.id,p.project_no,tmp.real_qty,tmp.total_qty,SUM(p.quantity) production_qty,
		p.project_name order_desc FROM BMS_NA_PROJECT p
		LEFT JOIN (
			select count(distinct b1.bus_number) real_qty,count(distinct b.bus_number) total_qty,b.project_id
			from BMS_NA_PROJECT_BUS b 
			left join BMS_NA_PROJECT_BUS b1 on b.id=b1.id 
			<if test="start_date !=null and start_date !=''">
				and b1.welding_offline > CONCAT(#{start_date},' 00:00:00')
			</if>
			<if test="end_date !=null and end_date !=''">
				and b1.welding_offline &lt;= CONCAT(#{end_date},' 23:59:59')
			</if>
			where b.welding_online != '' group by b.project_id
			) tmp ON tmp.project_id=p.id
		WHERE p.production_plant= #{factory_name}
		AND p.project_no = #{project_no}
		GROUP BY p.id
		
		union all
		SELECT '涂装上线' key_name,p.id,p.project_no,tmp.real_qty,tmp.total_qty,SUM(p.quantity) production_qty,
		p.project_name order_desc FROM BMS_NA_PROJECT p
		LEFT JOIN (
			select count(distinct b1.bus_number) real_qty,count(distinct b.bus_number) total_qty,b.project_id
			from BMS_NA_PROJECT_BUS b 
			left join BMS_NA_PROJECT_BUS b1 on b.id=b1.id 
			<if test="start_date !=null and start_date !=''">
				and b1.painting_online > CONCAT(#{start_date},' 00:00:00')
			</if>
			<if test="end_date !=null and end_date !=''">
				and b1.painting_online &lt;= CONCAT(#{end_date},' 23:59:59')
			</if>
			where b.welding_online != '' group by b.project_id
			) tmp ON tmp.project_id=p.id
		WHERE p.production_plant= #{factory_name}
		AND p.project_no = #{project_no}
		GROUP BY p.id
		
		union all
		select '涂装下线' key_name,fo.order_id,o.order_no,tmp.real_qty,tmp.total_qty,sum(fo.production_qty) production_qty,concat(o.order_no,' ',o.order_name,t.bus_type_code,' ',sum(fo.production_qty),'台') order_desc 
		from BMS_OR_FACTORY_ORDER fo 
		left join BMS_OR_ORDER o on o.id=fo.order_id 
		left join BMS_BASE_BUS_TYPE t on o.bus_type_id=t.id 
		left join 
		(select count(distinct b1.bus_number) real_qty,count(distinct b.bus_number) total_qty,b.order_id
		from BMS_PLAN_BUS b 
		left join BMS_PLAN_BUS b1 on b.id=b1.id 
		<if test="start_date !=null and start_date !=''">
			and b1.painting_offline_date > CONCAT(date_sub(#{start_date},interval 1 day),' 17:30:00')
		</if>
		<if test="end_date !=null and end_date !=''">
			and b1.painting_offline_date &lt;=concat(#{end_date},' 17:30:00')
		</if>
		where b.painting_offline_date != '' and b.factory_id=#{factory_id} group by b.order_id) tmp on tmp.order_id=fo.order_id
		where fo.factory_id=#{factory_id}
		<if test="order_no !=null and order_no !=''">
			and o.order_no like concat(#{order_no},'%')
		</if>
		group by fo.order_id
		
		union all
		select '底盘上线' key_name,fo.order_id,o.order_no,tmp.real_qty,tmp.total_qty,sum(fo.production_qty) production_qty,concat(o.order_no,' ',o.order_name,t.bus_type_code,' ',sum(fo.production_qty),'台') order_desc 
		from BMS_OR_FACTORY_ORDER fo 
		left join BMS_OR_ORDER o on o.id=fo.order_id 
		left join BMS_BASE_BUS_TYPE t on o.bus_type_id=t.id 
		left join 
		(select count(distinct b1.bus_number) real_qty,count(distinct b.bus_number) total_qty,b.order_id
		from BMS_PLAN_BUS b 
		left join BMS_PLAN_BUS b1 on b.id=b1.id 
		<if test="start_date !=null and start_date !=''">
			and b1.chassis_online_date > CONCAT(date_sub(#{start_date},interval 1 day),' 17:30:00')
		</if>
		<if test="end_date !=null and end_date !=''">
			and b1.chassis_online_date &lt;=concat(#{end_date},' 17:30:00')
		</if>
		where b.chassis_online_date != '' and b.factory_id=#{factory_id} group by b.order_id) tmp on tmp.order_id=fo.order_id
		where fo.factory_id=#{factory_id}
		<if test="order_no !=null and order_no !=''">
			and o.order_no like concat(#{order_no},'%')
		</if>
		group by fo.order_id

		union all
		select '底盘下线' key_name,fo.order_id,o.order_no,tmp.real_qty,tmp.total_qty,sum(fo.production_qty) production_qty,concat(o.order_no,' ',o.order_name,t.bus_type_code,' ',sum(fo.production_qty),'台') order_desc 
		from BMS_OR_FACTORY_ORDER fo 
		left join BMS_OR_ORDER o on o.id=fo.order_id 
		left join BMS_BASE_BUS_TYPE t on o.bus_type_id=t.id 
		left join 
		(select count(distinct b1.bus_number) real_qty,count(distinct b.bus_number) total_qty,b.order_id
		from BMS_PLAN_BUS b 
		left join BMS_PLAN_BUS b1 on b.id=b1.id 
		<if test="start_date !=null and start_date !=''">
			and b1.chassis_offline_date > CONCAT(date_sub(#{start_date},interval 1 day),' 17:30:00')
		</if>
		<if test="end_date !=null and end_date !=''">
			and b1.chassis_offline_date &lt;=concat(#{end_date},' 17:30:00')
		</if>
		where b.chassis_offline_date != '' and b.factory_id=#{factory_id} group by b.order_id) tmp on tmp.order_id=fo.order_id
		where fo.factory_id=#{factory_id}
		<if test="order_no !=null and order_no !=''">
			and o.order_no like concat(#{order_no},'%')
		</if>
		group by fo.order_id
		
		union all
		select '总装上线' key_name,fo.order_id,o.order_no,tmp.real_qty,tmp.total_qty,sum(fo.production_qty) production_qty,concat(o.order_no,' ',o.order_name,t.bus_type_code,' ',sum(fo.production_qty),'台') order_desc 
		from BMS_OR_FACTORY_ORDER fo 
		left join BMS_OR_ORDER o on o.id=fo.order_id 
		left join BMS_BASE_BUS_TYPE t on o.bus_type_id=t.id 
		left join 
		(select count(distinct b1.bus_number) real_qty,count(distinct b.bus_number) total_qty,b.order_id
		from BMS_PLAN_BUS b 
		left join BMS_PLAN_BUS b1 on b.id=b1.id 
		<if test="start_date !=null and start_date !=''">
			and b1.assembly_online_date > CONCAT(date_sub(#{start_date},interval 1 day),' 17:30:00')
		</if>
		<if test="end_date !=null and end_date !=''">
			and b1.assembly_online_date &lt;=concat(#{end_date},' 17:30:00')
		</if>
		where b.assembly_online_date != '' and b.factory_id=#{factory_id} group by b.order_id) tmp on tmp.order_id=fo.order_id
		where fo.factory_id=#{factory_id}
		<if test="order_no !=null and order_no !=''">
			and o.order_no like concat(#{order_no},'%')
		</if>
		group by fo.order_id
		
		union all
		select '总装下线' key_name,fo.order_id,o.order_no,tmp.real_qty,tmp.total_qty,sum(fo.production_qty) production_qty,concat(o.order_no,' ',o.order_name,t.bus_type_code,' ',sum(fo.production_qty),'台') order_desc 
		from BMS_OR_FACTORY_ORDER fo 
		left join BMS_OR_ORDER o on o.id=fo.order_id 
		left join BMS_BASE_BUS_TYPE t on o.bus_type_id=t.id 
		left join 
		(select count(distinct b1.bus_number) real_qty,count(distinct b.bus_number) total_qty,b.order_id
		from BMS_PLAN_BUS b 
		left join BMS_PLAN_BUS b1 on b.id=b1.id 
		<if test="start_date !=null and start_date !=''">
			and b1.assembly_offline_date > CONCAT(date_sub(#{start_date},interval 1 day),' 17:30:00')
		</if>
		<if test="end_date !=null and end_date !=''">
			and b1.assembly_offline_date &lt;=concat(#{end_date},' 17:30:00')
		</if>
		where b.assembly_offline_date != '' and b.factory_id=#{factory_id} group by b.order_id) tmp on tmp.order_id=fo.order_id
		where fo.factory_id=#{factory_id}
		<if test="order_no !=null and order_no !=''">
			and o.order_no like concat(#{order_no},'%')
		</if>
		group by fo.order_id
		
		union all
		select '车辆入库' key_name,fo.order_id,o.order_no,tmp.real_qty,tmp.total_qty,sum(fo.production_qty) production_qty,concat(o.order_no,' ',o.order_name,t.bus_type_code,' ',sum(fo.production_qty),'台') order_desc 
		from BMS_OR_FACTORY_ORDER fo 
		left join BMS_OR_ORDER o on o.id=fo.order_id 
		left join BMS_BASE_BUS_TYPE t on o.bus_type_id=t.id 
		left join 
		(select count(distinct b1.bus_number) real_qty,count(distinct b.bus_number) total_qty,b.order_id
		from BMS_PLAN_BUS b 
		left join BMS_PLAN_BUS b1 on b.id=b1.id 
		<if test="start_date !=null and start_date !=''">
			and b1.warehousing_date > CONCAT(date_sub(#{start_date},interval 1 day),' 17:30:00')
		</if>
		<if test="end_date !=null and end_date !=''">
			and b1.warehousing_date &lt;=concat(#{end_date},' 17:30:00')
		</if>
		where b.warehousing_date != '' and b.factory_id=#{factory_id} group by b.order_id) tmp on tmp.order_id=fo.order_id
		where fo.factory_id=#{factory_id}
		<if test="order_no !=null and order_no !=''">
			and o.order_no like concat(#{order_no},'%')
		</if>
		group by fo.order_id
		) record  
		left join 
		(
		select k.key_name,sum(p1.plan_qty) total_plan_qty,p1.order_id
		from BMS_PLAN_PRODUCTION_PLAN p1
		left join BMS_BASE_KEY k on p1.plan_code_value=k.value AND key_code = 'PLAN_CODE'
		where  p1.factory_id=#{factory_id}
		<if test="start_date !=null and start_date !=''">
			and p1.plan_date >=#{start_date}
		</if>
		<if test="end_date !=null and end_date !=''">
			and p1.plan_date &lt;=#{end_date}
		</if>
		group by p1.order_id,k.key_name
		) p on p.key_name=record.key_name and p.order_id=record.order_id
		left join BMS_BASE_KEY k on record.key_name=k.key_name
		WHERE (p.total_plan_qty>0 OR record.real_qty >0)
		<if test="workshop !=null and workshop !=''">
			and record.key_name like concat(#{workshop},'%')
		</if>		
		order by record.order_id,cast(k.value as signed)
	</select>
	
</mapper>
